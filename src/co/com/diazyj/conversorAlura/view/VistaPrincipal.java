/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.com.diazyj.conversorAlura.view;
import co.com.diazyj.conversorAlura.controller.CrearMonedas;
import co.com.diazyj.conversorAlura.model.Moneda;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;


/**
 *
 * @author Admin
 */
public class VistaPrincipal extends javax.swing.JFrame {
    
   //private ArrayList<Moneda> listaMonedas;
    //private Moneda monedaOrigenSeleccionada;
    //private Moneda monedaDestinoSeleccionada;
    private int indexOrigen = -1;
    private int indexDestino;
    private Moneda monedaOrigenSeleccionada;
    private Moneda monedaDestinoSeleccionada;
    private String input;
    CrearMonedas monedaOrigen = new CrearMonedas();
    CrearMonedas monedaDestino = new CrearMonedas();
    ArrayList<Moneda> listaMonedasOrigen = monedaOrigen.getListaMonedas();
    ArrayList<Moneda> listaMonedasDestino = monedaDestino.getListaMonedas();

    /**
     * Creates new form VistaPrincipal
     */
    public VistaPrincipal() {
        initComponents();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboMonedaOrigen = new javax.swing.JComboBox<>();
        comboMonedaDestino = new javax.swing.JComboBox<>();
        inputOrigen = new javax.swing.JTextField();
        outputDestino = new javax.swing.JTextField();
        lblOrigen = new javax.swing.JLabel();
        lblDestino = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CrearMonedas creadorMonedas = new CrearMonedas();
        ArrayList<Moneda> listaMonedas = creadorMonedas.getListaMonedas();

        // Creamos el arreglo con un espacio adicional para el elemento "Seleccione moneda a convertir"
        String[] nombresMonedas = new String[listaMonedas.size() + 1];

        // Agregamos "Seleccione moneda a convertir" en la primera posición del arreglo
        nombresMonedas[0] = "Seleccione moneda a convertir";

        // Llenamos el resto del arreglo con los nombres de las monedas
        for (int i = 0; i < listaMonedas.size(); i++) {
            nombresMonedas[i + 1] = listaMonedas.get(i).getNombre();
        }
        comboMonedaOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(nombresMonedas));
        comboMonedaOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMonedaOrigenActionPerformed(evt);
            }
        });

        comboMonedaDestino.setModel(new javax.swing.DefaultComboBoxModel<>(nombresMonedas));
        comboMonedaDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMonedaDestinoActionPerformed(evt);
            }
        });

        outputDestino.setEditable(false);

        lblOrigen.setText("    ");

        lblDestino.setText("     ");

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
        jLabel1.setText("Conversor de Monedas");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrigen)
                    .addComponent(lblDestino))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(outputDestino))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboMonedaDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboMonedaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboMonedaOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(lblOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputOrigen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboMonedaDestino, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(outputDestino)
                    .addComponent(lblDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboMonedaOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMonedaOrigenActionPerformed
    // Obtenemos el índice seleccionado en el ComboBox
    indexOrigen = comboMonedaOrigen.getSelectedIndex() - 1;
    if (indexOrigen >= 0) {
    monedaOrigenSeleccionada = listaMonedasOrigen.get(indexOrigen);
    String codigoOrigen = monedaOrigenSeleccionada.getCodigo();
    lblOrigen.setText(codigoOrigen);
    }  
    }//GEN-LAST:event_comboMonedaOrigenActionPerformed

    private void comboMonedaDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMonedaDestinoActionPerformed
    // Obtenemos el índice seleccionado en el ComboBox
    input = inputOrigen.getText();
    indexDestino = comboMonedaDestino.getSelectedIndex() - 1;
        if (indexDestino >= 0 && indexOrigen >=0 && input != null) {
            
    // creamos el objeto Moneda
    
    monedaDestinoSeleccionada = listaMonedasDestino.get(indexDestino);
    String codigoMonedaDestino = monedaDestinoSeleccionada.getCodigo();
    double tasaMonedaDestino = monedaDestinoSeleccionada.getTasaCambio();
    double tasaMonedaOrigen = monedaOrigenSeleccionada.getTasaCambio();
    double cantidad = Double.parseDouble(input);
    double cantidadEnDestino = cantidad *(tasaMonedaDestino/tasaMonedaOrigen);
    
    NumberFormat salidaSF = NumberFormat.getNumberInstance(Locale.getDefault());
    salidaSF.setGroupingUsed(true);
    salidaSF.setMaximumFractionDigits(2);
    String salida = salidaSF.format(cantidadEnDestino); 
     lblDestino.setText(codigoMonedaDestino);
     outputDestino.setText(salida);
        }
    }//GEN-LAST:event_comboMonedaDestinoActionPerformed

     /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboMonedaDestino;
    private javax.swing.JComboBox<String> comboMonedaOrigen;
    private javax.swing.JTextField inputOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblDestino;
    private javax.swing.JLabel lblOrigen;
    private javax.swing.JTextField outputDestino;
    // End of variables declaration//GEN-END:variables
}
